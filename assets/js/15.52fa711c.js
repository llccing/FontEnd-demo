(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{217:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5abb5b01f265da237f1e5a92",target:"_blank",rel:"noopener noreferrer"}},[t._v("思路"),a("OutboundLink")],1)]),t._m(3),t._m(4),t._m(5),a("p",[t._v("对象类型")]),t._m(6),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5b2b0a6051882574de4f3d96",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展题目"),a("OutboundLink")],1)]),t._m(7)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"字节跳动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节跳动","aria-hidden":"true"}},[this._v("#")]),this._v(" 字节跳动")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"金额转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#金额转换","aria-hidden":"true"}},[this._v("#")]),this._v(" 金额转换")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10000000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=(\\B\\d{3})+$)/g")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("g是表示全局匹配的修饰符，全局匹配指查找所有匹配而非在找到第一个匹配后停止。\n$是表示结尾的量词，如n$，匹配的是任何以n为结尾的字符串。\n\\d是查找数字的元字符。\nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("是匹配包含 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),t._v(" 个 n 的序列的字符串的量词。\nn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("是匹配任何包含至少一个 n 的字符串的量词。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n正向预查，用于匹配任何其后紧接指定字符串 n 的字符串。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" String对象的方法，作用是找到一个或多个正则表达式的匹配。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("String对象的方法，作用是替换与正则表达式匹配的子串。\n\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("是表示匹配非单词边界的元字符，与其互为补集的元字符是\\b，表示匹配单词边界。\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"js的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型","aria-hidden":"true"}},[this._v("#")]),this._v(" JS的数据类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("6种数据类型\nnumber/string/boolean/undefined/null/object\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Array/Function/RegExp/Date\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"js中基本数据类型和引用类型在内存上有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中基本数据类型和引用类型在内存上有什么区别？","aria-hidden":"true"}},[this._v("#")]),this._v(" JS中基本数据类型和引用类型在内存上有什么区别？")])}],!1,null,null,null);e.options.__file="toutiao.md";s.default=e.exports}}]);