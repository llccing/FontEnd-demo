(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{205:function(t,e,r){"use strict";r.r(e);var p=r(0),a=Object(p.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"_23种设计模式中英文对照"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23种设计模式中英文对照","aria-hidden":"true"}},[t._v("#")]),t._v(" 23种设计模式中英文对照")]),r("p",[t._v("Singleton 单件模式")]),r("p",[t._v("Abstract Factory 抽象工厂模式")]),r("p",[t._v("Builder 生成器模式")]),r("p",[t._v("Factory Method 工厂方法模式")]),r("p",[t._v("Prototype 原型模式")]),r("p",[t._v("Adapter 适配器模式")]),r("p",[t._v("Bridge 桥接模式")]),r("p",[t._v("Composite 组合模式")]),r("p",[t._v("Decorator 装饰模式")]),r("p",[t._v("Facade 外观模式")]),r("p",[t._v("Flyweight 享元模式")]),r("p",[t._v("Proxy 代理模式")]),r("p",[t._v("Template Method模板方法")]),r("p",[t._v("Command 命令模式")]),r("p",[t._v("Interpreter 解释器模式")]),r("p",[t._v("Mediator 中介者模式")]),r("p",[t._v("Iterator 迭代器模式")]),r("p",[t._v("Observer 观察者模式")]),r("p",[t._v("Chain Of Responsibility 职责链模式")]),r("p",[t._v("Memento 备忘录模式")]),r("p",[t._v("State 状态模式")]),r("p",[t._v("Strategy 策略模式")]),r("p",[t._v("Visitor 访问者模式")])])}],!1,null,null,null);a.options.__file="name.md";e.default=a.exports}}]);